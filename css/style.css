@charset "UTF-8";
/*
scss 변수 사용법
- _variable.scss 변수등록 전용 파일 생성
- 해당 파일 안쪽에 $변수명: 값; 으로 변수 선언
- 해당 변수 호출하려고 하는 파일에 @use '파일명'
- 파일명.변수명
*/
:root {
  /* lightness, chroma, hue*/
  --point-lch1: lch(55.01% 74.77 129.82);
  --point-lch: 52.6% 71.85 140.01;
  --black-lch: 0% 0 0;
  --gray-lch: 50% 0 0;
  --white-lch: 100% 0 0;
  --opacity-vol: 0.5;
  --transition-time: 0.5s;
  --wid-tablet: 1200px;
  --wid-mp: 680px;
}

/*
  미디어쿼리 사용시 break point값을 일반 css 변수에
  닫아놓으면 문서가 랜더링될때 변수값이 읽히기 때문에
  반응형 동작이 안됨

  -- 해결방법
  문서 렌더링전 미리 서버쪽에서 break point수리값 설정되야함
  scss변수는 변수값이 랜더링전 컴파일 시점에 읽히기 때문에 가능
*/
html {
  font-size: 16px;
}

* {
  margin: 0px;
  padding: 0px;
  color: inherit;
  box-sizing: border-box;
  font-family: "Noto Sans KR";
}

ul,
ol {
  list-style: none;
}

a {
  text-decoration: none;
}

img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/*
  미디어쿼리 (media query)
  - 브라우저 폭을 구문해서 각 폭에 맞는 전용 스타일 적용
  - 하나의 웹 문서를 브라우저 폭에 다른 기술을 적용 가능하게 함

  반응형 웹 (RWD: Reponsive Web Design)

  효율적인 RWD 작업을 위한 규칙
  1. 모바일 디바이스에서는 가로 폭의 총합이 100%작업
  (가로축에 px불가, 여백포함)
  2. 기존 데스크탑 대비 변경할 필요가 없는 코드는 미디어쿼리에 붙여넣기 할 필요 없음
  3. 높이 값은 가급적 고정 px
*/
@media screen and (max-width: 1200px) {
  body {
    background-color: hotpink;
  }
}
@media screen and (max-width: 680px) {
  body {
    background-color: aqua;
  }
}
body {
  background-color: lch(var(--gray-lch));
  padding: 20px;
}

div {
  border-radius: 20px;
  background-color: lch(var(--white-lch));
  width: 980px;
  margin: 0 auto;
  padding: 40px 50px;
}
div header {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  padding-bottom: 20px;
  border-bottom: 1px solid lch(var(--black-lch));
}
div header h1 {
  font: 600 2.5rem/1 "orbitron";
  color: lch(var(--point-lch)/0.8);
}
div header nav {
  display: flex;
  gap: 40px;
}
div header nav a {
  font: 0.9rem/1 "orbitron";
  letter-spacing: 1px;
  display: inline-block;
}
div header nav a:hover {
  font-weight: bold;
  font-size: 1.2rem;
  transition: 200ms;
  color: lch(var(--point-lch)/0.5);
}
div header .btnMobileMenu {
  display: none;
}
div footer {
  border-top: 1px solid lch(var(--black-lch));
  padding-top: 20px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 5px;
}
div footer ul {
  display: flex;
  gap: 10px;
  font-size: 1.2rem;
  order: 2;
}
div footer ul li {
  color: lch(var(--point-lch));
}
div footer ul li:hover {
  transform: rotate(360deg) scale(0.8);
  transition: var(--transition-time);
  opacity: var(--opacity-vol);
}
div footer p {
  font-size: 0.8rem;
  color: lch(var(--point-lch)/0.5);
  order: 1;
}

@media screen and (max-width: 1200px) {
  div {
    width: 90%;
  }
  div header {
    justify-content: space-between;
  }
  div header h1 {
    font-size: 1.4rem;
  }
  div header nav {
    display: none;
  }
  div header .btnMobileMenu {
    display: block;
  }
}
@media screen and (max-width: 680px) {
  body {
    padding: 0px;
  }
  div {
    width: 100%;
    border-radius: 0px;
  }
  div header h1 {
    font-size: 1.2rem;
  }
  div footer {
    justify-content: center;
    flex-wrap: wrap;
    align-content: center;
  }
  div footer ul {
    width: 100%;
    display: flex;
    justify-content: center;
  }
  div footer p {
    width: 100%;
    text-align: center;
  }
}
main {
  display: flex;
  justify-content: space-between;
  padding: 40px 0px;
}
main figure {
  width: 40%;
  height: 400px;
  border-radius: 3%;
  overflow: hidden;
  background-color: lch(var(--point-lch)/0.4);
}
main figure img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: 1s;
}
main figure img:hover {
  transform: scale(1.5);
  opacity: var(--opacity-vol);
}
main article {
  width: 55%;
  text-align: left;
}
main article p {
  line-height: 1.5;
  text-align: justify; /*left right center, justify는 띄어쓰기의 간격을 조절한다.*/
  color: lch(var(--gray-lch));
  margin-bottom: 20px;
}
main article a {
  background-color: lch(var(--black-lch));
  color: lch(var(--white-lch));
  font-weight: bold;
  font-size: 0.7rem;
  width: 100px;
  height: 34px;
  display: inline-block;
  text-align: center;
  line-height: 34px;
  border-radius: 15px;
}
main article a:hover {
  width: 130px;
  background-color: lch(var(--point-lch)/0.8);
  transition: var(--transition-time);
}

@media screen and (max-width: 1200px) {
  main {
    flex-wrap: wrap;
  }
  main figure {
    width: 100%;
    margin-bottom: 15px;
  }
  main article {
    width: 100%;
  }
}

/*# sourceMappingURL=style.css.map */
